// header and hero
$header-height: 50vh;
$header-image: $header-height * 0.9;

header {

  position: relative;
  height: $header-height;
  margin-top: $menuheight;

  .back {

    width: 100%;
    height: $header-image;
    background-color: $color-menu;
    overflow: hidden;

    img {
      width: 100%;
      object-fit: cover;
      filter: blur(0.7vw) opacity(0.4);
      transform: scale(1.1);
    }
  }

  .hero {

    position: absolute;
    width: $header-image;
    max-width: 90vw;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    background-color: $color-back;
    border: 6px solid $color-back;

    @include respond('medium') {
      left: auto;
      right: 5vw;
    }

    &:after {
      position: absolute;
      content: ' ';
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: rgba($color-fore, 0);
      will-change: background-color;
    }

    & + .quote {
      transform: translateY(-99em);
    }

    &.progressive:not(.replace) {

      & + .quote {
        will-change: filter, transform;
        animation: 1s cubic-bezier(0.8,0.1,0.6,1.6) 1.5s forwards quotehero;
      }

    }

  }

  .quote, .cta {
    display: none;
    position: absolute;
    font-size: 2em;
    top: 10%;
    left: 5vw;
    right: calc(#{$header-image} + 15vw);
    line-height: 1.05;
    color: $color-back;
  }

  .cta {
    font-size: 1.5em;
    text-align: center;
    top: auto;
    bottom: 20%;

    a {
      display: block;
      width: 6em;
      padding: 0.1em 0 0.3em;
      margin: 0 auto;
      color: $color-back;
      border: 2px solid $color-back;
      will-change: color, border-color, box-shadow, text-shadow;
      transition: all 0.2s linear;

      &:hover, &focus {
        color: #fff;
        border-color: #fff;
        text-shadow: 0 0 3px #fff;
        box-shadow: 0 0 8px #fff;
      }

    }
  }

  @include respond('medium') {

    .quote, .cta {
      display: block;
    }

  }

  q::before, q::after {
    content: "";
  }

}


// animation
@keyframes quotehero {
	0% {
    filter: blur(10px) opacity(0);
    transform: translateX(-5vw);
  }
	100% {
    filter: blur(0px) opacity(1);
    transform: translateX(0);
  }
}
